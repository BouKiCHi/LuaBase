-- listview.lua

local mod = do_module("mod_base.lmod")

function mod.init()
	mod.w = mod.sw
	mod.h = mod.sh

	mod.win = gui.createWindow( 0 , 16 , mod.w , mod.h - 16 )
	
	mod.textbody = { 
		"Alfa",
		"Bravo", 
		"Charlie",
		"Delta",
		"Echo",
		"Foxtrot",
		"Golf",
		"Hotel",
		"India",
		"Juliet",
		"Kilo",
		"Lima",
		"Mike",
		"November",
		"Oscar",
		"Papa",
		"Quebec",
		"Romeo",
		"Sierra",
		"Tango",
		"Uniform",
		"Victor",
		"Whiskey",
		"Xray",
		"Yankee",
		"Zulu" }

	mod.textlines = #mod.textbody

    mod.textmode = false

	mod.cursor = 0	
	mod.buildGUI()

	
	mod.curmax = mod.lines
	mod.curofs = 0
	mod.updateCursor()	
end


function mod.setTextMode( mode )
    if mode
    then
        mod.textmode = true
        gui.setHide ( mod.cursorObj , true )
    else
        mod.textmode = false
        gui.setHide ( mod.cursorObj , false )
    end
end

function mod.setTextBody ( body )
	mod.textbody = body
	mod.textlines = #body

	mod.pos = 0
	mod.cursor = 0
	
	gui.setScrollBar ( mod.bar , mod.textlines , 0 , mod.lines )
	gui.setScrollPos ( mod.bar , mod.pos )

	
	mod.updateText ( mod.pos )

	gui.setUpdate ( mod.win )
end

function mod.calcOfs ()
	mod.curofs = 0
	mod.curmax = mod.lines

	if mod.hasHeader then
		mod.curofs = mod.curofs + 1
		mod.curmax = mod.curmax - 1
	end

	if mod.hasFooter then
		mod.curmax = mod.curmax - 1
	end
	
end


function mod.setFooter ( text )
	if text ~= "" then
		mod.hasFooter = true
		mod.footer = text
		
		gui.setTextColor ( mod.line_objs[ mod.lines ] , 
            graph.Color( 0xff,0xff,0xff ) )

		gui.setHide ( mod.footObj , false )

	else
		mod.hasFooter = false
		gui.removeColor ( mod.line_objs, "text" )
		gui.setHide ( mod.footObj , true )		
	end
	mod.calcOfs()
	mod.updateCursor()
	mod.updateText ( mod.pos )
	gui.setUpdate ( mod.win )
end

function mod.setHeader ( text )
	if text ~= "" then
		mod.hasHeader = true
		mod.header = text
		
		gui.setTextColor ( mod.line_objs[1] , 
            graph.Color( 0xff,0xff,0xff ) )

		gui.setHide ( mod.headObj , false )

	else
		mod.hasHeader = false
		gui.removeColor ( mod.line_objs, "text" )
		gui.setHide ( mod.headObj , true )		
	end
	mod.calcOfs()
	mod.updateCursor()
	mod.updateText ( mod.pos )
	gui.setUpdate ( mod.win )
end

function mod.updateCursor ()
	gui.moveObject ( mod.cursorObj , 0 , (mod.cursor + mod.curofs) * mod.ch  )	
	gui.setUpdate( mod.win )
end

function mod.scrollPrepare ()
    local i = 1
    local ofs = 0
    local h = mod.lines

    if mod.hasHeader then
    ofs = 1
    h = h - 1
    gui.setText( mod.line_objs [ 1 ] , mod.header )
    end

    if mod.hasFooter then
    h = h - 1
    gui.setText( mod.line_objs [ mod.lines ] , mod.footer )
    end

    return ofs,h
end

function mod.scrollDown( pos )

    -- print("ScrollDown")

    local ofs,h = mod.scrollPrepare()

    -- print( string.format("ofs:%d,h:%d" , ofs , h ) )

    local lobj = mod.line_objs [ 1 + ofs ]

    for i = 1,h - 1
    do
        local obj = mod.line_objs [ i + ofs + 1 ]
        mod.line_objs [ i + ofs ] = obj

        local tx,ty = gui.getPosition ( obj )

        local ny = ( i + ofs - 1 ) * mod.ch
        gui.moveObject( obj , 0 , ny )

        -- print( string.format( "xid:%d, y %d <- %d " , obj.xid , ny , ty ) )

    end

    mod.line_objs [ h + ofs ] = lobj

    if h + pos <= mod.textlines
    then
        gui.setText ( lobj , mod.textbody [ h + pos ] )
    else
        gui.setText ( lobj ,"" )
    end

    gui.moveObject( lobj , 0 , ( h + ofs - 1 ) * mod.ch )	        
end


function mod.scrollUp( pos )

    -- print("ScrollUp")

    local ofs,h = mod.scrollPrepare()

    -- print( string.format("ofs:%d,h:%d" , ofs , h ) )

    local lobj = mod.line_objs [ h + ofs ]

    for i = h - 1,1,-1
    do
        local obj = mod.line_objs [ i + ofs ]
        mod.line_objs [ i + ofs + 1 ] = obj

        local tx,ty = gui.getPosition ( obj )

        local ny = ( i + ofs ) * mod.ch
        gui.moveObject( obj , 0 , ny )

        -- print( string.format( "xid:%d , y %d <- %d " , obj.xid , ny , ty ) )

    end

    mod.line_objs [ 1 + ofs ] = lobj

    if 1 + pos <= mod.textlines
    then
        gui.setText ( lobj , mod.textbody [ 1 + pos ] )
    else
        gui.setText ( lobj ,"" )
    end
    
    gui.moveObject( lobj , 0 , ( 1 + ofs - 1 ) * mod.ch )	        
end

function mod.updateText( pos )
	local i = 1
	local ofs = 0
	local h = mod.lines
	
	if mod.hasHeader then
		ofs = 1
		h = h - 1
		gui.setText( mod.line_objs [ 1 ] , mod.header )
	end
	
	if mod.hasFooter then
		h = h - 1
		gui.setText( mod.line_objs [ mod.lines ] , mod.footer )
	end


	for i = 1,h
	do
		if i + pos <= mod.textlines
		then
			gui.setText ( mod.line_objs[ i + ofs ] , mod.textbody [ i + pos ] )
		else
			gui.setText ( mod.line_objs[ i + ofs ] , "" )
		end
	end
end

function mod.changeBackColor ( color )
    gui.setColor ( mod.headObj , "back" , color )		
    gui.setColor ( mod.footObj , "back" , color )
end

function mod.buildGUI()

	mod.ch = 16 

	local box  = gui.createBox (  0 , 0 , mod.win.w , mod.win.h )
	local view = gui.createView ( 0 , 0 , mod.win.w , mod.win.h )
	local bar  = gui.createScrollBar ( mod.win.w - 10 , 0 , 10 , mod.win.h )

	local headObj   = gui.createBox ( 0 , 0 , mod.win.w - 10 , mod.ch  )
	local cursorObj = gui.createBox ( 0 , 0 , mod.win.w - 10 , mod.ch  )
	
	mod.line_objs = {}
	mod.lines = (mod.win.h / mod.ch )
	
	for i = 0 , mod.lines -1
	do
		local obj = gui.createText ( 0 , i * mod.ch  , "" )	
        obj.xid = i
		gui.appendChild( view , obj )
		table.insert ( mod.line_objs , obj )		
	end
	
	local footObj   = gui.createBox ( 0 , mod.ch * (mod.lines - 1) , mod.win.w - 10 , mod.ch  )
	
	local back_color = {
		graph.Color( 0xff,0xff,0xff ),
		graph.Color( 0x80,0x80,0xf0 ),
		graph.Color( 0x60,0x60,0x80 )
	}
	gui.setColor ( headObj , "back" , back_color )		
	gui.setColor ( footObj , "back" , back_color )

	mod.pos = 0

	mod.bar = bar
	mod.headObj   = headObj
	mod.footObj   = footObj
	mod.cursorObj = cursorObj
	
	gui.setHide ( headObj , true )
	gui.setHide ( footObj , true )
	
	

	mod.updateText ( mod.pos )

	gui.setScrollBar ( mod.bar , mod.textlines , 0 , mod.lines )
	gui.setScrollPos ( mod.bar , 0 )

	gui.append ( mod.win , box )
	gui.append ( mod.win , footObj )
	gui.append ( mod.win , headObj )
	gui.append ( mod.win , cursorObj )
	gui.append ( mod.win , view )
	gui.append ( mod.win , bar )
	
	gui.setFocus ( mod.win , cursorObj )
	gui.viewFocus ( mod.win , true )
end

function mod.checkKey()
	gui.setUpdate ( mod.win )
	if key.Up()
	then
	
		if not mod.textmode and mod.cursor > 0 then
			mod.cursor = mod.cursor - 1
			mod.updateCursor()
		else
			if mod.pos > 0 then
				mod.pos = mod.pos - 1
				mod.scrollUp ( mod.pos )
				-- mod.updateText ( mod.pos )
				gui.setScrollPos ( mod.bar , mod.pos )
			end
		end
	end

	if key.Down()
	then
		if not mod.textmode and mod.cursor + 1 < mod.curmax and mod.cursor + 1 < mod.textlines then
			mod.cursor = mod.cursor + 1
			mod.updateCursor()
		else
            -- print("mod.lines : " .. mod.lines .. ",pos:" .. mod.pos .. ",lines:" .. mod.textlines) 
			if mod.pos + mod.curmax < mod.textlines then
				mod.pos = mod.pos + 1
                mod.scrollDown( mod.pos )
				-- mod.updateText ( mod.pos )
				gui.setScrollPos ( mod.bar , mod.pos )
			end
		end
	end
	
	local result = 0
	
	if key.B()      then result = -1 end
	if key.Select() then result = -2 end
	if key.Start()  then result = -3 end
	if key.Y()      then result = -4 end
	if key.X()      then result = -5 end
	
	if result < 0
	then
		mod.setResult( result )
		mod.doFinish()
	end

	if key.A()
	then
		mod.setResult( mod.cursor + mod.pos )
		mod.doFinish()
	end
end

return mod
